<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <title>Noah Game</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      background-color: #000;
      font-family: Arial, sans-serif;
      touch-action: none;
    }

    #gameCanvas {
      display: block;
      margin: 0 auto;
      background-color: #111;
      touch-action: none;
    }

    #info, #titulo {
      position: absolute;
      z-index: 10;
      color: #000;
      font-size: 18px;
    }

    #info {
      top: 10px;
      left: 10px;
    }

    #titulo {
      top: 10px;
      right: 10px;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <div id="info">
    Pontuação: <span id="score">0</span><br />
    Recorde: <span id="recorde">0</span>
  </div>
  <div id="titulo">Corações de Noah</div>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");

    const backgroundImage = new Image();
    backgroundImage.src = "https://harikacocuklarizmir.com/images/uploads/2dc834e1801c5d89034a2b8454d42ce8.jpg";

    const paddleWidth = 80;
    const paddleHeight = 10;
    let paddleX = (canvas.width - paddleWidth) / 2;

    let ballX = canvas.width / 2;
    let ballY = canvas.height / 2;
    const ballRadius = 8;
    let ballSpeedX = 3;
    let ballSpeedY = -3;

    let score = 0;
    let recorde = parseInt(localStorage.getItem("recorde")) || 0;
    document.getElementById("recorde").textContent = recorde;

    function increaseSpeed() {
      ballSpeedX += ballSpeedX > 0 ? 0.5 : -0.5;
      ballSpeedY += ballSpeedY > 0 ? 0.5 : -0.5;
    }

    function drawHeart(x, y, size, color) {
      ctx.beginPath();
      ctx.moveTo(x, y);
      ctx.bezierCurveTo(x, y - size / 2, x - size, y - size / 2, x - size, y);
      ctx.bezierCurveTo(x - size, y + size / 2, x, y + size, x, y + size * 1.5);
      ctx.bezierCurveTo(x, y + size, x + size, y + size / 2, x + size, y);
      ctx.bezierCurveTo(x + size, y - size / 2, x, y - size / 2, x, y);
      ctx.fillStyle = color;
      ctx.fill();
    }

    function draw() {
      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);

      drawHeart(ballX, ballY, ballRadius, "#ff69b4");

      ctx.fillStyle = "#00bfff";
      ctx.fillRect(paddleX, canvas.height - paddleHeight - 10, paddleWidth, paddleHeight);

      ballX += ballSpeedX;
      ballY += ballSpeedY;

      if (ballX + ballRadius > canvas.width || ballX - ballRadius < 0) {
        ballSpeedX *= -1;
      }
      if (ballY - ballRadius < 0) {
        ballSpeedY *= -1;
      }

      if (
        ballY + ballRadius >= canvas.height - paddleHeight - 10 &&
        ballX >= paddleX &&
        ballX <= paddleX + paddleWidth
      ) {
        ballSpeedY *= -1;
        score++;
        document.getElementById("score").textContent = score;

        if (score > recorde) {
          recorde = score;
          localStorage.setItem("recorde", recorde);
          document.getElementById("recorde").textContent = recorde;
        }

        if (score % 5 === 0) {
          increaseSpeed();
        }
      }

      if (ballY + ballRadius > canvas.height) {
        alert(`Fim de Jogo!\nPontuação: ${score}\nRecorde: ${recorde}`);
        document.location.reload();
      }

      requestAnimationFrame(draw);
    }

    document.addEventListener("mousemove", (e) => {
      const rect = canvas.getBoundingClientRect();
      paddleX = e.clientX - rect.left - paddleWidth / 2;
    });

    document.addEventListener("touchmove", (e) => {
      const rect = canvas.getBoundingClientRect();
      paddleX = e.touches[0].clientX - rect.left - paddleWidth / 2;
    }, { passive: false });

    setInterval(() => {
      if (paddleX < 0) paddleX = 0;
      if (paddleX + paddleWidth > canvas.width) paddleX = canvas.width - paddleWidth;
    }, 10);

    draw();
  </script>
</body>
</html>